// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model Profile {
  id          Int            @id
  city        String
  country     String
  description String
  email       String
  image       String?
  info        InfoCategory[]
  name        String
  phone       String
  portfolio   String?
  projects    Project[]
  socials     Social[]
}

model Social {
  id        String  @id @default(cuid())
  icon      String
  label     String
  name      String
  order     Int?
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int
  state     Boolean @default(true)
  url       String
}

model InfoCategory {
  id          String        @id @default(cuid())
  icon        String?
  information Information[]
  name        String
  order       Int?
  profile     Profile       @relation(fields: [profileId], references: [id])
  profileId   Int
  state       Boolean       @default(true)
}

model Information {
  id            String       @id @default(cuid())
  category      InfoCategory @relation(fields: [categoryId], references: [id])
  categoryId    String
  city          String?
  content       String
  country       String?
  description   String?
  endDate       DateTime?
  institution   Institution? @relation(fields: [institutionId], references: [id])
  institutionId String?
  knowledge     Knowledge?
  level         Int?
  order         Int?
  startDate     DateTime?
  state         Boolean      @default(true)
  url           String?
}

model Institution {
  id          String        @id @default(cuid())
  information Information[]
  name        String
  url         String?
}

model KnowledgeCategory {
  id         String      @id @default(cuid())
  knowledges Knowledge[]
  name       String
}

model Knowledge {
  informationId       String            @id
  icon                String
  information         Information       @relation(fields: [informationId], references: [id])
  knowledgeCategory   KnowledgeCategory @relation(fields: [knowledgeCategoryId], references: [id])
  knowledgeCategoryId String
  projects            Project[]
}

model Project {
  id          String      @id @default(cuid())
  description String
  image       String?
  knowledges  Knowledge[]
  name        String
  order       Int?
  profile     Profile     @relation(fields: [profileId], references: [id])
  profileId   Int
  state       Boolean     @default(true)
  url         String?
}
